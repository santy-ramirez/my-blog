"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[485],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,g=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2655:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var n=r(3117),a=(r(7294),r(3905));const o={slug:"Instalar-Eslint-y-prettier-para-react",title:"Instalar Eslint y prettier para react",authors:["santy"],tags:["soluciones"]},i="Instalar Eslint y prettier para react",s={permalink:"/blog/Instalar-Eslint-y-prettier-para-react",editUrl:" https://github.com/santy-ramirez/my-blog/edit/main/blog/2023-01-31-Instalar Eslint-y-Prettier/index.md",source:"@site/blog/2023-01-31-Instalar Eslint-y-Prettier/index.md",title:"Instalar Eslint y prettier para react",description:"EsLint analiza est\xe9ticamente tu c\xf3digo para encontrar problemas r\xe1pidamente,sus reglas son configurables ,es dicir, se pueden definir por uno mismo o equipo, para que todos est\xe9n en la misma soncronia , te ayuda a detectar errores de sintaxis, c\xf3digo incorrecto, malas pr\xe1cticas.Sin Embargo prettier es un formateador de c\xf3digo, que puedes definir reglas pero para formatear tu c\xf3digo autom\xe1ticamente despu\xe9s de guardarlo.",date:"2023-01-31T00:00:00.000Z",formattedDate:"31 de enero de 2023",tags:[{label:"soluciones",permalink:"/blog/tags/soluciones"}],readingTime:3.9,hasTruncateMarker:!0,authors:[{name:"Santiago Ramirez",title:"web developer",url:"https://santidev.com.ar",imageURL:"https://avatars.githubusercontent.com/u/66737901?v=4",key:"santy"}],frontMatter:{slug:"Instalar-Eslint-y-prettier-para-react",title:"Instalar Eslint y prettier para react",authors:["santy"],tags:["soluciones"]},nextItem:{title:"Dominio personalizado con nic.ar y github-pages",permalink:"/blog/dominio-personalizado-nic.ar-git-pages"}},l={authorsImageUrls:[void 0]},p=[{value:"Instalar Eslint",id:"instalar-eslint",level:3},{value:"Instalar prettier",id:"instalar-prettier",level:3}],u={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"EsLint analiza est\xe9ticamente tu c\xf3digo para encontrar problemas r\xe1pidamente,sus reglas son configurables ,es dicir, se pueden definir por uno mismo o equipo, para que todos est\xe9n en la misma soncronia ",", te ayuda a detectar errores de sintaxis, c\xf3digo incorrecto, malas pr\xe1cticas.Sin Embargo prettier es un formateador de c\xf3digo, que puedes definir reglas pero para formatear tu c\xf3digo autom\xe1ticamente despu\xe9s de guardarlo."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Eslint es un linter")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Prettier es un formateador"))),(0,a.kt)("p",{parentName:"admonition"},"Linter : se entiende como una herramienta a cargo de la mejora del c\xf3digo a trav\xe9s del an\xe1lisis del c\xf3digo fuente."),(0,a.kt)("p",{parentName:"admonition"},"Formateador de C\xf3digo : es para asegurar que el estilo del\xa0c\xf3digo escrito sea consistente en toda la base de\xa0c\xf3digo.")),(0,a.kt)("h3",{id:"instalar-eslint"},"Instalar Eslint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"npm i -D eslint\nyarn add -D eslint\n")),(0,a.kt)("p",null,"Configuraci\xf3n de eslint: la forma mas f\xe1cil de configurar es con el siguiente comando que nos ejecutar\xe1 un script, donde nos preguntar\xe1 como queremos configurarlo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"npm init @eslint/config || npx eslint --init\n")),(0,a.kt)("p",null,"1_Primero nos preguntara como queremos usar Eslint, si solo para revisar la sintaxis, encontrar problemas o forzar un estilo de c\xf3digo.en mi caso elijo siempre la tercera opci\xf3n: encontrar problemas o forzar un estilo del c\xf3digo"),(0,a.kt)("p",null,"2_despu\xe9s nos preguntar\xe1 que tipo de modulo javascript queremos utilizar (import o export). generalmente en backend se suele utilizar ",(0,a.kt)("inlineCode",{parentName:"p"},"require")," y en frontend ",(0,a.kt)("inlineCode",{parentName:"p"},"import"),".Elijimos import."),(0,a.kt)("p",null,"3_Seguimos con seleccionar el Framework que utilizaremos en nuestro proyecto, si\xa0",(0,a.kt)("strong",{parentName:"p"},"React"),",\xa0",(0,a.kt)("strong",{parentName:"p"},"VueJs")," o\xa0",(0,a.kt)("strong",{parentName:"p"},"Vanilla Javascript"),". selecionamos react"),(0,a.kt)("p",null,"4_Tambi\xe9n podemos seleccionar si queremos o estamos utilizando TypeScript, en este caso no voy a utilizar typeScript"),(0,a.kt)("p",null,"5_seleccionar el tipo de\xa0",(0,a.kt)("strong",{parentName:"p"},"Enviroment")," o\xa0",(0,a.kt)("strong",{parentName:"p"},"Entorno")," para la ejecuci\xf3n de nuestro proyecto si en el Navegador o entorno de NodeJs, Seleccionamos browser"),(0,a.kt)("p",null,"6","_"," Una parte importante es que podemos utilizar una gu\xeda de estilo (generalmente elijo el standard para ahorrarme muchos problemas)ya definida, para inspeccionar nuestros archivos JavaScript, etc."),(0,a.kt)("p",null,"7_Y por ultimo Seleccionaremos el formato que queremos utilizar para nuestro archivo de configuraci\xf3n, en este caso utilizaremos\xa0",(0,a.kt)("strong",{parentName:"p"},"JSON"),"\xa0pero cualquier otro formato funciona de la misma manera."),(0,a.kt)("p",null,"Nos deber\xeda quedar de la siguiente manera:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"\u2714 How would you like to use ESLint? \xb7 style\n\u2714 What type of modules does your project use? \xb7 esm\n\u2714 Which framework does your project use? \xb7 react\n\u2714 Does your project use TypeScript? \xb7 No / Yes\n\u2714 Where does your code run? \xb7 browser\n\u2714 How would you like to define a style for your project? \xb7 guide\n\u2714 Which style guide do you want to follow? \xb7 standard\n\u2714 What format do you want your config file to be in? \xb7 JSON\nChecking peerDependencies of eslint-config-standard@latest\nThe config that you've selected requires the following dependencies:\n\neslint-plugin-react@latest eslint-config-standard@latest eslint@^8.0.1 eslint-plugin-import@^2.25.2 eslint-plugin-n@^15.0.0 eslint-plugin-promise@^6.0.0\n\u2714 Would you like to install them now? \xb7 No / Yes\n\u2714 Which package manager do you want to use? \xb7 npm\nInstalling eslint-plugin-react@latest, eslint-config-standard@latest, eslint@^8.0.1, eslint-plugin-import@^2.25.2, eslint-plugin-n@^15.0.0, eslint-plugin-promise@^6.0.0\n\nadded 74 packages, and audited 271 packages in 45s\n\n78 packages are looking for funding\n  run `npm fund` for details\n\nfound 0 vulnerabilities\nSuccessfully created .eslintrc.json file in /home/santiago/Documentos/proyectos/react/demoEslint\n")),(0,a.kt)("p",null,"Como configurar las reglas: vamos al archivo de configuraci\xf3n de eslint y nos dirigimos a la secci\xf3n de relus(como se muestra en la seccion de abajo), donde podemos definir nuestras reglas con el siguiente formato:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'relus:{\n"rele":"0ff o 0"\n{\n\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"0 = quiero anular la regla"),(0,a.kt)("p",{parentName:"admonition"},"1=quiero que me marque como advertencia"),(0,a.kt)("p",{parentName:"admonition"},"2= quiero que me marque como error")),(0,a.kt)("h3",{id:"instalar-prettier"},"Instalar prettier"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"npm i -D prettier\n")),(0,a.kt)("p",null,"El siguiente comando es para formatear tu c\xf3digo, corregir seg\xfan las reglas impuestas (",(0,a.kt)("strong",{parentName:"p"},"solo se muestra en consola como lo va a formatear"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"npx prettier src/App.jsx\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"prettier --write ."),"es para sobrescribir todo, pero para un gran proyecto puede llevar un poco de tiempo.\xa0Puede ejecutar\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"prettier --write app/"),"para sobrescribir un determinado directorio.(",(0,a.kt)("strong",{parentName:"p"},"para que se vea reflejado efectivamente los cambios en tu editor de c\xf3digo"),")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"npx prettier src/App.jsx --write\n.\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"--check"),"es como\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"--write"),", pero solo verifica que los archivos ya est\xe9n formateados, en lugar de sobrescribirlos."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"npx prettier --check\n")),(0,a.kt)("p",null,"Instalar un plugin que ayuda a trabajar de forma en conjunta a prettier y eslint, ya que muchas veces entran en conflictos, lo que hace este plugin es que en caso de que entren en conflictos toma como prioridad a prettier."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"npm i -D eslint-config-prettier\n\n")),(0,a.kt)("p",null,"Agregar en package.json. el scrip para despues poder hacer npm run y el comando custumizado"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'\n"format": "prettier --write .",\n "lint": "eslint --fix . --ext .js, .jsx"\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Agregar los archivos .prettierignore y .eslintignore en la ra\xedz del proyecto para que la CLI de Prettier y eslint y los editores sepan qu\xe9 archivos\xa0",(0,a.kt)("em",{parentName:"p"},"no"),"\xa0formatear:en .prettierignore agregar los siguientes archivos : dist,package-lock.json y en .eslintignore agregar : dist")))}m.isMDXComponent=!0}}]);